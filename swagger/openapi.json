{
    "openapi": "3.0.1",
    "info": {
        "title": "srv-kit-springboot",
        "description": "Kit do artefato SRV em Java e Spring Boot - Cloud Pública",
        "version": "0.0.15-SNAPSHOT"
    },
    "externalDocs": {
        "description": "Bradescode Documentation",
        "url": "https://confluence.bradesco.com.br:8443/pages/viewpage.action?pageId=244976149"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "Bearer Authentication": []
        }
    ],
    "paths": {
        "/v2/livro": {
            "post": {
                "tags": [
                    "ManutencaoEstoqueLivroController"
                ],
                "summary": "Pesquisa livro por ID",
                "description": "Endpoint que pesquisa o livro de acordo com o ID na BD.",
                "operationId": "inserirLivro",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LivroDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/livros": {
            "get": {
                "tags": [
                    "ManutencaoEstoqueLivroController"
                ],
                "summary": "Lista todos os livros da base de dados",
                "description": "Endpoint que busca todos os livros na base de dados.\\n\\nRealiza a pesquisa retornando os dados que estão expostos pelo mock.",
                "operationId": "consultaLivros",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "maximum": 999,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "maximum": 99,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LivroDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/livro/{id}": {
            "get": {
                "tags": [
                    "ManutencaoEstoqueLivroController"
                ],
                "summary": "Pesquisa livro por ID",
                "description": "Endpoint que pesquisa o livro de acordo com o ID na BD.",
                "operationId": "listarLivro",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "maximum": 999,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LivroDTO"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ManutencaoEstoqueLivroController"
                ],
                "summary": "Remove livro por ID",
                "description": "Endpoint que pesquisa o livro de acordo com o ID na BD.",
                "operationId": "removerLivro",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "maximum": 999,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/livros-async": {
            "get": {
                "tags": [
                    "AsyncCallLivrariaController"
                ],
                "summary": "Lista todos os livros da base de dados por IDs",
                "description": "Endpoint que busca todos os livros na base de dados por ids.\\n\\nRealiza a pesquisa retornando os dados que estão expostos pelo mock.",
                "operationId": "getAsyncBooksById",
                "parameters": [
                    {
                        "name": "ids[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LivroDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LivroDTO": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "titulo": {
                        "type": "string"
                    },
                    "autor": {
                        "type": "string"
                    },
                    "editora": {
                        "type": "string"
                    },
                    "valor": {
                        "type": "number"
                    },
                    "quantidade_estoque": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer Authentication": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}